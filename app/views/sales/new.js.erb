$("#modal-land").html("<%= j (render partial: 'shared/modal', locals:{ size: 'xl' } ) %>")
$('.select-2-client-land').select2({ width: '80%',theme: "bootstrap4" })
setInputDate("#date")
setInputDate("#fee_start_date")
sale.precio = document.getElementById("price").value

if(sale.precio != 0){
	document.getElementById('price').value = `${string_to_currency( document.getElementById('price').value )}`
}

document.getElementById('price').disabled = sale.precio != 0
set_currency_fn()

$("#modal-land").modal('show')

sale.cuotas = 0
sale.resto =  document.getElementById("price").value
sale.cant_payments = 0;
sale.cant_payment_files = 0;
sale.entrega = 0;

function fee_start_date_info(){
	noty_alert('info', 'Si coloca una fecha las cuotas corren a partir de esa fecha. En caso de colocar día de vencimiento se tomara ese día de vencimiento. Si no coloca fecha se toma como referencia la fecha de venta', 10000)
}

document.getElementById('sale_was_payed').addEventListener('click', (event) => {
	const land_price = string_to_float_with_value( document.getElementById("price").value )
	console.log(land_price)
	if ( !valid_number(land_price) ) {
		noty_alert('info',"Debe ingresarle un valor al lote")
		addClassInvalid(document.getElementById('price'))
		event.target.checked = !event.target.checked
		return
	}
	if (event.target.checked) {
		if (document.getElementById('date').value == '') {
			noty_alert('info', 'Debe ingresar fecha de compra')
			addClassInvalid(document.getElementById('date'))
			event.target.checked = false
			return
		} else {
			addClassValid(document.getElementById('date'))
		}
		document.getElementById('number_of_payments').value = 1
	} else {
		document.getElementById('number_of_payments').value = 0
	}
	document.getElementById('inputs_sale_not_payed').classList.toggle('d-none', event.target.checked)
	calular_valor_cuota()
	generate_fees()
})

document.getElementById("price").addEventListener('change', (event) => {
	const land_price = string_to_float_with_value(event.target.value)
	if (valid_number(land_price)) {
		sale.precio = land_price
		sale.resto = land_price
		sale.calcular_monto_pagado()
		addClassValid( event.target )
		calular_valor_cuota()
		generate_fees()
	}
})

document.getElementById('add-client').addEventListener('click', (event) => {
	event.preventDefault()
	let client = document.getElementById('client_id')
	if (client.value != null && client.value != '') {
		let client_name =  $('#client_id option:selected').text()
		$('.client-list').append(`
			<div class="col-md-12 col-lg-6 col-xl-4 row mt-2" id="${client.value}">
				<input type="text" value="${client_name}" class="client-id form-control rounded-0 col-8 mr-1" data-id=${client.value} disabled></input>
				<button type="button" class="btn u-btn-red remove-client" onclick="remove_client(event, ${client.value})" title="Quitar a ${ client_name }">
					<i class="fa fa-trash"></i>
				</button>
			</div>
		`)
		$('#client_id option:selected').attr('disabled', 'disabled')
		$('.select-2-client-land').val('').trigger('change')
	} else {
		noty_alert('error', 'Error al agregar el cliente a la lista')
	}
})

function remove_client( event, id ) {
	event.preventDefault()
	let element = document.getElementById(id)
	element.remove()
	$(`#client_id option[value='${id}']`).attr('disabled', false)
}

function add_clients_to_form() {
	const clients = document.getElementsByClassName('client-id')
	for (let i = 0; i < clients.length; i++) {
		sale.form.append( `sale[sale_clients_attributes][${i}][client_id]`, clients[i].dataset.id)
	}
}

function get_clients_names() {
	let names = '<ul>'
	let lista = document.getElementsByClassName('client-id')
	for (let i = lista.length - 1; i >= 0; i--) {
		names += `<li>${lista[i].value}</li>`
	}
	names += '</ul>'
	return names
}

/*JS payments*/
document.getElementById('add-payment').addEventListener('click', (e) => {
	e.preventDefault()
	sale.cant_payments++
	sale.cant_payment_files++
	$('#payment-list').append("<%= j ( render partial: 'input_pay', locals: { cp: @cp, first_label: false } ) %>")
	set_currency_fn()
})

function remove_payment(event){
	event.preventDefault()
	event.target.parentElement.remove()
	sale.cant_payments--
	sale.calcular_monto_pagado()
}

function calc_valor_en_pesos(e){
	const node = e.parentElement.parentElement
	const select = node.querySelector(`#payment_currency`)
	let calculo_en_pesos = node.querySelector(`#calculo_en_pesos`)
	let paid = string_to_float_with_value(node.querySelector(`#payment`).value)
	let exchange_value = string_to_float_with_value(node.querySelector(`#exchange_value`).value)

	if ( !valid_number(exchange_value) || !valid_number(paid) ) {
		calculo_en_pesos.value = 0
		$('#valor_restante').html('')
		return
	}
	calculo_en_pesos.value = string_to_currency( `${exchange_value * paid}` )
}

function calculo_de_entrega(event) {
	const input = event.target
	const payment_currency = event.target.parentElement.parentElement.querySelector('#payment_currency')
	if (payment_currency.value == '0') {
		return
	}
	calc_valor_en_pesos(input)
	sale.calcular_monto_pagado()
}

function sumar_entregas(entrega) {
	// Sumamos todas las entregas puestas
	const payments = document.getElementsByClassName('payment-data')
	let calculo = 0
	for (let pay of payments) {
		calculo += parseFloat( pay.querySelector('#calculo_en_pesos').value )
	}
	if (!valid_number(calculo)) {
		sale.resto = sale.precio
	} else {
		sale.resto = sale.precio - calculo
	}
	entrega = calculo
}

function add_paymentos_to_form() {
	const payments = document.getElementsByClassName('payment-data')
	let i = 0
	for (let pay of payments) {
		let paid = string_to_float_with_value( pay.querySelector('#payment').value )
		if ( !valid_number(paid) ) {
			// form_data.append('num_pays', 0 )
			pay.querySelector('#payment').parentElement.classList.add('u-has-error-v1')
			return
		}
		i++
		pay.querySelector('#payment').parentElement.classList.remove('u-has-error-v1')
		let currency_selected = pay.querySelector('#payment_currency').options[pay.querySelector('#payment_currency').selectedIndex]
		let payment_currency_id = parseInt( currency_selected.value ) 
		if (payment_currency_id == 0 ) {
			pay.querySelector('#payment_currency').parentElement.classList.add('u-has-error-v1')
			return
		}
		pay.querySelector('#payment_currency').parentElement.classList.remove('u-has-error-v1')
		let exchange_value = string_to_float_with_value( pay.querySelector('#exchange_value').value )
		let valor_en_pesos = string_to_float_with_value( pay.querySelector('#calculo_en_pesos').value )
		let date = pay.querySelector('#pay_date').value
    if ( currency_selected.dataset.exchange == 'true' && !valid_number(exchange_value) ) {
    	noty_alert('error','Debe ingresar en cuanto toma la moneda ingresada')
    	pay.querySelector('#exchange_value').classList.add('u-has-error-v1')
    	return
    }

		if(date == '') {
			date = document.getElementById('date').value
		}

    if ( !valid_number(valor_en_pesos) ) {
    	return
    }
		sale.form.append( `sale[payments_attributes][${i}][payments_currency_id]`, payment_currency_id)
		sale.form.append( `sale[payments_attributes][${i}][payment]`, paid)
		sale.form.append( `sale[payments_attributes][${i}][taken_in]`, exchange_value)
		sale.form.append( `sale[payments_attributes][${i}][comment]`, pay.querySelector('#payment_comment').value)
		sale.form.append( `sale[payments_attributes][${i}][date]`, date)
		sale.form.append( `sale[payments_attributes][${i}][first_pay]`, true)
		
		let files = pay.querySelector('#fileAttachment')
		if (files !== null) {
			let totalFiles = files.files.length
			if (totalFiles > 0) {
				for (let n = 0; n < totalFiles; n++) {
	        // form_data.append(`files_${i}[]`, files.files[n])
					sale.form.append( `sale[payments_attributes][${i}][files][]`, files.files[n])
	      }
			}
		}
	}
	// form_data.append('num_pays', i )
}
/*END JS payments*/

document.getElementById('number_of_payments').addEventListener('change', function(event) {
	event.target.classList.toggle('is-invalid', event.target.value =='')
	calular_valor_cuota()
	generate_fees()
})

document.getElementById('due_day').addEventListener('change', function(event) {
	event.target.classList.toggle('is-invalid', event.target.value =='')
	generate_fees()
})

document.getElementById('fee_start_date').addEventListener('change', function(event) {
	event.target.classList.toggle('is-invalid', event.target.value =='')
	generate_fees()
})

function calular_valor_cuota() {
	sale.cuotas = document.getElementById('number_of_payments').value
	if(sale.cuotas < 1) {
		return
	}
	const a_pagar_en_cuotas = ( sale.resto > 0 ) ? sale.resto : sale.precio
	sale.valor_cuota = roundToTwo( a_pagar_en_cuotas/sale.cuotas )
}

document.getElementById('setear_cuotas').addEventListener('click', function(e){
	const fees = document.getElementsByClassName('fee_added')
	if(fees.length == 0){
		e.target.checked = false
		return
	}
	const is_check = e.target.checked
	for( let fee of fees ) {
		fee.querySelector('#fee_value').disabled = !is_check
		fee.querySelector('#fee_date').disabled = !is_check
	}
	document.getElementById('number_of_payments').disabled = is_check
	document.getElementById('due_day').disabled = is_check
	document.getElementById('fee_start_date').disabled = is_check
})

function generate_fees(){
	const number_of_fees = document.getElementById('number_of_payments').value
	
	if (!valid_number(sale.valor_cuota) && valid_number(number_of_fees) ) {
		noty_alert('info', "Debe ingresar el valor del lote")
		addClassInvalid( document.getElementById('price') )
		return
	}
	
	let fee_value = `${sale.valor_cuota}`.replace('.', ',')
	const due_day = document.getElementById('due_day').value
	const fee_start_date = document.getElementById("fee_start_date").value
	let html_to_insert = ''
	if (number_of_fees > 0 && due_day > 0 && fee_start_date != '') {
		fee_value = string_to_currency(fee_value)

		let fee_date =  new Date(`${fee_start_date}T00:00:00`)
		fee_date.setDate( due_day )
		for (let i = 1; i <= number_of_fees; i++) {
			html_to_insert += `
				<div class='row col-12 my-2 fee_added' >
					<label class='col-4 col-md-2'> Cuota #${i} </label>
					<input id='fee_value' type='text' 
						data-type='currency' 
						data-number='${i}' 
						value='${fee_value}'
						class='form-control rounded-0 col-4 col-md-2 fee_value_input'
						onchange='show_total_pagado_en_cuotas()'
						disabled>
					<label class='col-4 col-md-1'> Fecha:  </label>
					<input id='fee_date' type='date' value='${date_to_string(fee_date)}' class='form-control rounded-0 col-4 col-md-2' disabled >
				</div>
				`	
			fee_date.setMonth( fee_date.getMonth() + 1 )
		} // end for
	} // end if
	document.getElementById('fees_list').innerHTML = html_to_insert
	set_currency_fn()
}

function show_total_pagado_en_cuotas(){
	if (document.getElementById('setear_cuotas').checked) {
		const sum = `${suma_cuotas_sale_land()}`
		document.getElementById('total_pagado_en_cuotas').innerHTML = `Total a pagar en cuotas: <b>${ string_to_currency(sum) }</b>`
	}
}

function set_fee_start_date(event){
	let first_pay_date = new Date(`${event.target.value}T00:00:00`)
	first_pay_date.setMonth( first_pay_date.getMonth() + 1 )
	document.getElementById('fee_start_date').value = date_to_string( first_pay_date )
	if ( !document.getElementById('setear_cuotas').checked  ) {
		generate_fees()
	}
}

document.getElementById('submit-form-land-sale').addEventListener('click', (event) => {
	event.preventDefault()
	set_form_sale()
	if ( validaciones_sale_form() ) {
		if ( document.getElementById('sale_was_payed').checked ) {
			$("#modal-land-sale-confirm").html("<%= j (render 'modal_confirm_bought') %>")
			$("#modal-land-sale-confirm").modal('show')
		} else {
			$("#modal-land-sale-confirm").html("<%= j (render 'modal_confirm') %>")
			populate_land_sale_confirm()
			$("#modal-land-sale-confirm").modal('show')
		}
	}
})

function send_sale(){
	fetch('/sales/', {
      method: 'POST',
      headers: {           
        'X-CSRF-Token': document.getElementsByName('csrf-token')[0].content,
      },
      body: sale.form
    }
  )
  .then( response => response.json() )
  .then( response => {
  	if (response.status === 'success') {
  		lands_table.ajax.reload(null,false)
	    $("#modal-land").modal('hide')
	    $("#modal-land-sale-confirm").modal('hide')
  	}
  	noty_alert(response.status, response.msg)
  } )
  .catch( error => noty_alert('error', 'Ocurrio un error, no se pudo registrar la venta') )
}

function set_form_sale() {
	sale.form = new FormData()
	sale.form.append("sale[land_id]", document.getElementById('land_id').value)
	sale.form.append("sale[comment]", document.getElementById('comment').value)
	sale.form.append("sale[due_day]", document.getElementById('due_day').value)
	sale.form.append("sale[date]", document.getElementById('date').value )
	sale.form.append("sale[number_of_payments]", document.getElementById('number_of_payments').value )
	sale.form.append("sale[land_sale]", document.getElementById('land_sale').value)
	sale.form.append("sale[land_price]", string_to_float_with_value(document.getElementById('price').value))
	sale.form.append("sale[price]", get_sale_price())
	// set status to sale
	const sale_status = ( document.getElementById('sale_was_payed').checked ) ? 'payed' : 'approved'
	sale.form.append("sale[status]", sale_status)
	add_clients_to_form()
  add_paymentos_to_form()
	add_fees_to_form()
}

function add_fees_to_form(){
	const fees = document.getElementsByClassName('fee_added')
	if(fees.length == 0){
		noty_alert('warn', 'No se ha generado cuotas')
		return
	}
	for (let index = 0; index < fees.length; index++) {
		const fee = fees[index];
		const fee_value =  string_to_float_with_value(fee.querySelector('#fee_value').value)
		const fee_date = fee.querySelector('#fee_date').value
		const fee_number = fee.querySelector('#fee_value').dataset.number
		sale.form.append( `sale[fees_attributes][${index}][number]`, fee_number)
		sale.form.append( `sale[fees_attributes][${index}][value]`, fee_value)
		sale.form.append( `sale[fees_attributes][${index}][due_date]`, fee_date)
	}
}

function validaciones_sale_form() {

	// validaciones aqui
	if ($('#fecha_compra').val() === '') {
		noty_alert( 'error', 'Debe seleccionar una fecha' )
		return false
	}

	if (document.getElementsByClassName('client-id').length == 0) {
		noty_alert( 'error', 'No ha seleccionado clientes.' )
		return false
	}

	if (sale.form.get('sale[number_of_payments]') == '' ) {
		document.getElementById('number_of_payments').parentElement.classList.add('u-has-error-v1')
		$('#msg_number_of_payment').html('')
		$('#msg_number_of_payment').append(`<p class='text-danger ml-4'> Debe ingresar las cuotas </>`)
		return false
	} else {
		document.getElementById('number_of_payments').parentElement.classList.remove('u-has-error-v1')
		$('#msg_number_of_payment').html('')
	}

	// if ( sale.form.get('setear_cuotas_manual') == 'true' ) {
	// 	if ( sale.form.get("valores_cuota[]") == 'null' ) {
	// 		noty_alert('error', 'Debe ingresar el valor válido a cada cuota')
	// 		return false
	// 	}
	// } else {
	// 	// validaciones cuotas manual
	// 	if ( sale.form.get("number_cuota_increase") > 0 ) {
	// 		if ( sale.form.get("valor_cuota_aumentada") == '' ) {
	// 			noty_alert( 'error', 'Debe ingresar el valor aumentado de la cuota.' )
	// 			return false
	// 		}
	// 		if ( parseInt( sale.form.get("number_cuota_increase") ) > parseInt( sale.form.get('number_of_payments') ) ) {
	// 			document.getElementById('number_cuota_increase').classList.add('u-has-error-v1')
	// 			noty_alert( 'error', 'Cuota de aumento es mayor a la cantidad de cuotas' )
	// 			return false
	// 		} else 
	// 			document.getElementById('number_cuota_increase').classList.remove('u-has-error-v1')
	// 	}

	// 	if ( sale.form.get("number_cuota_increase") == '' && sale.form.get("valor_cuota_aumentada") > 0 ) {
	// 		noty_alert( 'error', 'Debe ingresar a partir de que cuota aumenta el valor.' )
	// 		return false
	// 	}


	// 	if ( ( document.getElementsByClassName('payment-data').length != sale.form.get("num_pays") ) && document.getElementsByClassName('payment-data').length > 1 ) {
	// 		noty_alert('error', 'Datos invalidos en primer pago', sale.form.get("num_pays"))
	// 		return false
	// 	}

	// 	if (suma_cuotas_sale_land() < sale.resto) {
	// 		noty_alert('error', `El valor a pagar en cuotas es menor al que corresponde: $${numberFormat.format(suma_cuotas_sale_land()) }, deberia ser $${numberFormat.format(sale.resto) }`)
	// 		return false
	// 	}
	// }

	return true
}

function populate_land_sale_confirm(){
	populate_land_sale_data('Valor del lote', `$${numberFormat.format(sale.precio)}`)
	populate_land_sale_data('Saldo a pagar', `$${numberFormat.format(get_sale_price())}`)
	populate_land_sale_data('Fecha de la compra', format_date(sale.form.get("sale[date]")))
	populate_land_sale_data('Compradores', get_clients_names() )
	populate_land_sale_data('Primer entrega', `$${numberFormat.format(sale.entrega)}` )
	populate_land_sale_data('Cuotas', sale.form.get("sale[number_of_payments]") )
	populate_land_sale_data('A pagar en cuotas', `$${numberFormat.format(suma_cuotas_sale_land()) }` )
}

function populate_land_sale_data(name, info){
	const tbody = document.getElementById('sale-data')
	tbody.innerHTML += `
		<tr>
			<td>${name}</td>
			<td>${info}</td>
		</tr>
	`
}

function suma_cuotas_sale_land(){
	const cuotas = document.getElementsByClassName('fee_value_input')
	return Array.from(cuotas).reduce( (acum, element) => acum + string_to_float_with_value(element.value), 0 )
}

function sum_primer_entrega(){
	const primer_entrega = document.getElementsByClassName('calculo_en_pesos')
	return Array.from( primer_entrega ).reduce( (acum, element) => acum + string_to_float_with_value(element.value), 0 )
}

function get_sale_price() {
	return suma_cuotas_sale_land() + sum_primer_entrega()
}
