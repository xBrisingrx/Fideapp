$("#modal-land").html("<%= j (render partial: 'shared/modal', locals:{ size: 'xl' } ) %>")
$('.select-2-client-land').select2({ width: '80%',theme: "bootstrap4" })
setInputDate("#sale_date")
setInputDate("#sale_fee_start_date")
sale.precio = document.getElementById('sale_price').value
sale.date = document.getElementById('sale_date').value
sale.due_day = document.getElementById('sale_due_day').value

if(sale.precio != 0){
	document.getElementById('sale_price').value = `${string_to_currency( document.getElementById('sale_price').value )}`
}

document.getElementById('sale_price').disabled = sale.precio != 0
set_currency_fn()

$("#modal-land").modal('show')

sale.cuotas = 0
sale.resto =  document.getElementById('sale_price').value
sale.cant_payments = 0;
sale.cant_payment_files = 0;
sale.entrega = 0;

function fee_start_date_info(){
	noty_alert('info', 'Si coloca una fecha las cuotas corren a partir de esa fecha. En caso de colocar día de vencimiento se tomara ese día de vencimiento. Si no coloca fecha se toma como referencia la fecha de venta', 10000)
}

document.getElementById('sale_was_payed').addEventListener('click', (event) => {
	const land_price = string_to_float_with_value( document.getElementById('sale_price').value )
	
	if ( !valid_number(land_price) ) {
		noty_alert('info',"Debe ingresarle un valor al lote")
		addClassInvalid(document.getElementById('sale_price'))
		event.target.checked = !event.target.checked
		return
	}
	if (event.target.checked) {
		if (document.getElementById('sale_date').value == '') {
			noty_alert('info', 'Debe ingresar fecha de compra')
			addClassInvalid(document.getElementById('sale_date'))
			event.target.checked = false
			return
		} else {
			addClassValid(document.getElementById('sale_date'))
		}
		document.getElementById('sale_number_of_payments').value = 1

	} else {
		document.getElementById('sale_number_of_payments').value = 0
	}
	document.getElementById('inputs_sale_not_payed').classList.toggle('d-none', event.target.checked)
	calular_valor_cuota()
	generate_fees()
})

document.getElementById('sale_price').addEventListener('change', (event) => {
	const land_price = string_to_float_with_value(event.target.value)
	if (valid_number(land_price)) {
		sale.precio = land_price
		sale.resto = land_price
		sale.calcular_monto_pagado()
		addClassValid( event.target )
		calular_valor_cuota()
		generate_fees()
	}
})

document.getElementById('add-client').addEventListener('click', (event) => {
	event.preventDefault()
	let client = document.getElementById('sale_client_id')
	if (client.value != null && client.value != '') {
		let client_name =  $('#sale_client_id option:selected').text()
		$('.client-list').append(`
			<div class="col-md-12 col-lg-6 col-xl-4 row mt-2" id="${client.value}">
				<input type="text" value="${client_name}" class="client-id form-control rounded-0 col-8 mr-1" data-id=${client.value} disabled></input>
				<button type="button" class="btn u-btn-red remove-client" onclick="remove_client(event, ${client.value})" title="Quitar a ${ client_name }">
					<i class="fa fa-trash"></i>
				</button>
			</div>
		`)
		$('#sale_client_id option:selected').attr('disabled', 'disabled')
		$('.select-2-client-land').val('').trigger('change')
	} else {
		noty_alert('error', 'Error al agregar el cliente a la lista')
	}
})

function remove_client( event, id ) {
	event.preventDefault()
	let element = document.getElementById(id)
	element.remove()
	$(`#sale_client_id option[value='${id}']`).attr('disabled', false)
}

function add_clients_to_form() {
	const clients = document.getElementsByClassName('client-id')
	for (let i = 0; i < clients.length; i++) {
		sale.form.append( `sale[sale_clients_attributes][${i}][client_id]`, clients[i].dataset.id)
	}
}

function get_clients_names() {
	let names = '<ul>'
	let lista = document.getElementsByClassName('client-id')
	for (let i = lista.length - 1; i >= 0; i--) {
		names += `<li>${lista[i].value}</li>`
	}
	names += '</ul>'
	return names
}

/*JS payments*/
document.getElementById('add-payment').addEventListener('click', (e) => {
	e.preventDefault()
	sale.cant_payments++
	sale.cant_payment_files++
	$('#payment-list').append("<%= j ( render partial: 'input_pay', locals: { cp: @cp, first_label: false } ) %>")
	set_currency_fn()
})

function remove_payment(event){
	event.preventDefault()
	event.target.parentElement.remove()
	sale.cant_payments--
	sale.calcular_monto_pagado()
}

function calc_valor_en_pesos(e){
	const node = e.parentElement.parentElement
	const select = node.querySelector(`#payment_currency`)
	let calculo_en_pesos = node.querySelector(`#value_in_pesos`)
	let paid = string_to_float_with_value(node.querySelector(`#payment`).value)
	let exchange_value = string_to_float_with_value(node.querySelector(`#exchange_value`).value)

	if ( !valid_number(exchange_value) || !valid_number(paid) ) {
		calculo_en_pesos.value = 0
		$('#valor_restante').html('')
		return
	}
	calculo_en_pesos.value = string_to_currency( `${exchange_value * paid}` )
}

function calculo_de_entrega(event) {
	const input = event.target
	const payment_currency = event.target.parentElement.parentElement.querySelector('#payment_currency')
	if (payment_currency.value == '0') {
		return
	}
	calc_valor_en_pesos(input)
	sale.calcular_monto_pagado()
}

function sumar_entregas(entrega) {
	// Sumamos todas las entregas puestas
	const payments = document.getElementsByClassName('payment-data')
	let calculo = 0
	for (let pay of payments) {
		calculo += parseFloat( pay.querySelector('#value_in_pesos').value )
	}
	if (!valid_number(calculo)) {
		sale.resto = sale.precio
	} else {
		sale.resto = sale.precio - calculo
	}
	entrega = calculo
}
/*END JS payments*/

document.getElementById('sale_number_of_payments').addEventListener('change', function(event) {
	event.target.classList.toggle('is-invalid', event.target.value =='')
	calular_valor_cuota()
	generate_fees()
})

document.getElementById('sale_due_day').addEventListener('change', function(event) {
	event.target.classList.toggle('is-invalid', event.target.value =='')
	generate_fees()
})

document.getElementById('sale_fee_start_date').addEventListener('change', function(event) {
	event.target.classList.toggle('is-invalid', event.target.value =='')
	generate_fees()
})

function calular_valor_cuota() {
	sale.cuotas = document.getElementById('sale_number_of_payments').value
	if(sale.cuotas < 1) {
		return
	}
	const a_pagar_en_cuotas = ( sale.resto > 0 ) ? sale.resto : sale.precio
	sale.valor_cuota = roundToTwo( a_pagar_en_cuotas/sale.cuotas )
}

document.getElementById('setear_cuotas').addEventListener('click', function(e){
	const fees = document.getElementsByClassName('fee_added')
	if(fees.length == 0){
		e.target.checked = false
		return
	}
	const is_check = e.target.checked
	for( let fee of fees ) {
		fee.querySelector('#fee_value').disabled = !is_check
		fee.querySelector('#fee_date').disabled = !is_check
	}
	document.getElementById('sale_number_of_payments').disabled = is_check
	document.getElementById('sale_due_day').disabled = is_check
	document.getElementById('sale_fee_start_date').disabled = is_check
})

function generate_fees(){
	sale.generate_fees()
}

function show_total_pagado_en_cuotas(){
	if (document.getElementById('setear_cuotas').checked) {
		const sum = `${suma_cuotas_sale_land()}`
		document.getElementById('sale_total_pagado_en_cuotas').innerHTML = `Total a pagar en cuotas: <b>${ string_to_currency(sum) }</b>`
	}
}

document.getElementById('submit-form-land-sale').addEventListener('click', (event) => {
	event.preventDefault()
	set_form_sale()
	if ( validaciones_sale_form() ) {
		if ( document.getElementById('sale_was_payed').checked ) {
			$("#modal-land-sale-confirm").html("<%= j (render 'modal_confirm_bought') %>")
			$("#modal-land-sale-confirm").modal('show')
		} else {
			$("#modal-land-sale-confirm").html("<%= j (render 'modal_confirm') %>")
			populate_land_sale_confirm()
			$("#modal-land-sale-confirm").modal('show')
		}
	}
})

function send_sale(){
	fetch('/sales/', {
      method: 'POST',
      headers: {           
        'X-CSRF-Token': document.getElementsByName('csrf-token')[0].content,
      },
      body: sale.form
    }
  )
  .then( response => response.json() )
  .then( response => {
  	if (response.status === 'success') {
  		lands_table.ajax.reload(null,false)
	    $("#modal-land").modal('hide')
	    $("#modal-land-sale-confirm").modal('hide')
  	}
  	noty_alert(response.status, response.msg)
  } )
  .catch( error => noty_alert('error', 'Ocurrio un error, no se pudo registrar la venta') )
}

function set_form_sale() {
	sale.form = new FormData()
	sale.form.append("sale[land_id]", document.getElementById('sale_land_id').value)
	sale.form.append("sale[comment]", document.getElementById('sale_comment').value)
	sale.form.append("sale[due_day]", document.getElementById('sale_due_day').value)
	sale.form.append("sale[date]", document.getElementById('sale_date').value )
	sale.form.append("sale[number_of_payments]", document.getElementById('sale_number_of_payments').value )
	sale.form.append("sale[land_sale]", document.getElementById('sale_land_sale').value)
	sale.form.append("sale[land_price]", string_to_float_with_value(document.getElementById('sale_price').value))
	sale.form.append("sale[price]", get_sale_price())
	// set status to sale
	const sale_status = ( document.getElementById('sale_was_payed').checked ) ? 'payed' : 'approved'
	sale.form.append("sale[status]", sale_status)
	add_clients_to_form()
  sale.add_paymentos_to_form()
	sale.add_fees_to_form()
}

function validaciones_sale_form() {

	// validaciones aqui
	if ($('#fecha_compra').val() === '') {
		noty_alert( 'error', 'Debe seleccionar una fecha' )
		return false
	}

	if (document.getElementsByClassName('client-id').length == 0) {
		noty_alert( 'error', 'No ha seleccionado clientes.' )
		return false
	}

	if (sale.form.get('sale[number_of_payments]') == '' ) {
		document.getElementById('sale_number_of_payments').parentElement.classList.add('u-has-error-v1')
		$('#msg_number_of_payment').html('')
		$('#msg_number_of_payment').append(`<p class='text-danger ml-4'> Debe ingresar las cuotas </>`)
		return false
	} else {
		document.getElementById('sale_number_of_payments').parentElement.classList.remove('u-has-error-v1')
		$('#msg_number_of_payment').html('')
	}
	return true
}

function populate_land_sale_confirm(){
	populate_land_sale_data('Valor del lote', `$${numberFormat.format(sale.precio)}`)
	populate_land_sale_data('Saldo a pagar', `$${numberFormat.format(get_sale_price())}`)
	populate_land_sale_data('Fecha de la compra', format_date(sale.form.get("sale[date]")))
	populate_land_sale_data('Compradores', get_clients_names() )
	populate_land_sale_data('Primer entrega', `$${numberFormat.format(sale.entrega)}` )
	populate_land_sale_data('Cuotas', sale.form.get("sale[number_of_payments]") )
	populate_land_sale_data('A pagar en cuotas', `$${numberFormat.format(suma_cuotas_sale_land()) }` )
}

function populate_land_sale_data(name, info){
	const tbody = document.getElementById('sale-data')
	tbody.innerHTML += `
		<tr>
			<td>${name}</td>
			<td>${info}</td>
		</tr>
	`
}

function suma_cuotas_sale_land(){
	const cuotas = document.getElementsByClassName('fee_value_input')
	return Array.from(cuotas).reduce( (acum, element) => acum + string_to_float_with_value(element.value), 0 )
}

function sum_primer_entrega(){
	const primer_entrega = document.getElementsByClassName('calculo_en_pesos')
	return Array.from( primer_entrega ).reduce( (acum, element) => acum + string_to_float_with_value(element.value), 0 )
}

function get_sale_price() {
	return suma_cuotas_sale_land() + sum_primer_entrega()
}
